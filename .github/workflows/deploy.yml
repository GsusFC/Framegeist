name: 🚀 Deploy Framegeist

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggers

jobs:
  test-backend:
    name: 🧪 Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Test imports
        run: |
          cd backend
          python -c "import main; print('✅ Backend imports successful')"

  deploy-backend:
    name: 🛤️ Deploy Backend to Railway
    runs-on: ubuntu-latest
    needs: test-backend
    outputs:
      backend-url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        id: deploy
        run: |
          cd backend
          railway up --detach
          echo "url=$(railway status --json | jq -r '.deployments[0].url')" >> $GITHUB_OUTPUT
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-frontend:
    name: 🔺 Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_BASE_URL: ${{ needs.deploy-backend.outputs.backend-url }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: frontend
          vercel-args: '--prod'

  update-cors:
    name: 🔄 Update CORS Settings
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - name: Update Backend CORS
        run: |
          echo "🔧 CORS updated automatically via environment variables"
          echo "Backend URL: ${{ needs.deploy-backend.outputs.backend-url }}"
          echo "Frontend will be available at your Vercel domain"